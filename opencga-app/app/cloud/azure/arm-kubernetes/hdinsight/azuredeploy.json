{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterName": {
            "type": "string",
            "defaultValue": "[concat('cgahbase', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the HDInsight cluster to create."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Storage account name"
            }
        },
        "storageAccountBlobName": {
            "type": "string",
            "metadata": {
                "description": "Storage account blob file name"
            }
        },
        "clusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "clusterVersion": {
            "type": "string",
            "defaultValue": "4.0",
            "metadata": {
                "description": "HDInsight cluster version."
            }
        },
        "clusterHeadNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of head nodes in the HDInsight cluster."
            }
        },
        "clusterHeadNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D4_V2",
            "metadata": {
                "description": "Head node VM Size"
            }
        },
        "clusterWorkerNodeCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of nodes in the HDInsight cluster."
            }
        },
        "clusterWorkerNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D4_V2",
            "metadata": {
                "description": "Worker node VM Size"
            }
        },
        "clusterZookeeperNodeCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of Zookeeper nodes in the HDInsight cluster."
            }
        },
        "clusterZookeeperNodeSize": {
            "type": "string",
            "defaultValue": "Standard_D2_V2",
            "metadata": {
                "description": "Worker node VM Size"
            }
        },
        "clusterKind": {
            "type": "string",
            "defaultValue": "HBASE",
            "metadata": {
                "description": "The type of the HDInsight cluster to create."
            }
        },
        "sshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "defaultValue": null,
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "vnetId": {
            "type": "string",
            "metadata": {
                "description": "VNet to be used"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet to be used"
            }
        },
        "LogAnalyticsWorkspaceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace ID"
            }
        },
        "LogAnalyticsWorkspaceKey": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Key"
            }
        },
        "LogAnalyticsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Resource ID"
            }
        },
        "yarnSiteMemoryInMb": {
            "type": "int",
            "metadata": {
                "description": "Sets the 'yarn.nodemanager.resource.memory-mb' value on the cluster in 'yarn-site.xml'"
            }
        },
        "accountType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "skipRoleAssignment" : {
            "type": "bool",
            "defaultValue": false
        },
        "enableHBaseAcceleratedWrites" : {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "This feature allows the HBase Write Ahead Log to be placed on a Premium SSD disk which enables high throughput writes with lower latencies."
            }
        }
    },
    "variables": {
        "osProfilePublicKeys": {
            "linuxOperatingSystemProfile": {
                "sshProfile": {
                    "publicKeys":[
                        {
                            "certificateData": "[parameters('sshPublicKey')]"
                        }
                    ]
                }
            }
        },
        "osProfileBase": {
            "linuxOperatingSystemProfile": {
                "username": "[parameters('sshUserName')]",
                "password": "[parameters('sshPassword')]"
            }
        },
        "osProfile": "[if(empty(parameters('sshPublicKey')), variables('osProfileBase'), union(variables('osProfileBase'), variables('osProfilePublicKeys')))]",
        "dataDisksGroups1": {"dataDisksGroups":[{ "disksPerNode": 1 }]},
        "storageIdentityName": "hdinsight-storage-identity",
        "storageRoleAssignmentId": "[guid(concat(resourceGroup().id, 'storagecontributor', parameters('storageAccountName')))]",
        "storageBlobDataOwnerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "workernodeBase": {
            "name": "workernode",
            "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
            "hardwareProfile": {
                "vmSize": "[parameters('clusterWorkerNodeSize')]"
            },
            "osProfile": "[variables('osProfile')]",
            "virtualNetworkProfile": {
                "id": "[parameters('vnetId')]",
                "subnet": "[parameters('subnetId')]"
            }
        },
        "workernode": "[if(parameters('enableHBaseAcceleratedWrites'), union(variables('workernodeBase'), variables('dataDisksGroups1')), variables('workernodeBase'))]",
        "privateDnsZonesName": "azurehdinsight.net"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('storageIdentityName')]",
            "apiVersion": "2015-08-31-preview",
            "location": "[resourceGroup().location]"
        },
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                         
            ],
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": [
                        {
                            "id": "[parameters('subnetId')]"
                        }
                    ]
                },
                "isHnsEnabled": true
            },
            "sku": {
                "name": "[parameters('accountType')]"
            },
            "kind": "StorageV2",
        },
        {
            "condition": "[not(parameters('skipRoleAssignment'))]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('storageRoleAssignmentId')]",
            "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataOwnerRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('storageIdentityName')), '2015-08-31-preview').principalId]",
                "principalType":"ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('storageIdentityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "apiVersion": "2018-06-01-preview",
            "name": "[parameters('clusterName')]",
            "type": "Microsoft.HDInsight/clusters",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                "[variables('storageRoleAssignmentId')]",
                "[variables('privateDnsZonesName')]"
            ],
            "properties": {
                "clusterVersion": "[parameters('clusterVersion')]",
                "osType": "Linux",
                "tier": "Standard",
                "clusterDefinition": {
                    "kind": "[parameters('clusterKind')]",
                    "componentVersion": {
                        "HBase": "2.0"
                    },
                    "configurations": {
                        "gateway": {
                            "restAuthCredential.isEnabled": true,
                            "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
                            "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
                        },
                        "yarn-site": {
                            "yarn.nodemanager.resource.memory-mb": "[parameters('yarnSiteMemoryInMb')]"
                        },
                        "hbase-site": {
                            "hbase.client.keyvalue.maxsize": "0"
                        }
                    }
                },
                "storageProfile": {
                    "storageaccounts": [
                        {
                            "name": "[concat(parameters('storageAccountName'),'.dfs.core.windows.net')]",

                            "isDefault": true,
                            "fileSystem": "[parameters('storageAccountBlobName')]",
                            "resourceId":   "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccountName'))]",
                            "msiResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('storageIdentityName'))]"
                        }
                    ]
                },
                "computeProfile": {
                    "roles": [
                        {
                            "name": "headnode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[parameters('clusterHeadNodeCount')]",
                            "hardwareProfile": {
                                "vmSize": "[parameters('clusterHeadNodeSize')]"
                            },
                            "osProfile": "[variables('osProfile')]",
                            "virtualNetworkProfile": {
                                "id": "[parameters('vnetId')]",
                                "subnet": "[parameters('subnetId')]"
                            },
                            "scriptActions": [
                            ]
                        },
                        "[variables('workernode')]",
                        {
                            "name": "zookeepernode",
                            "minInstanceCount": 1,
                            "targetInstanceCount": "[parameters('clusterZookeeperNodeCount')]",
                            "hardwareProfile": {
                                "vmSize": "[parameters('clusterZookeeperNodeSize')]"
                            },
                            "osProfile": "[variables('osProfile')]",
                            "virtualNetworkProfile": {
                                "id": "[parameters('vnetId')]",
                                "subnet": "[parameters('subnetId')]"
                            },
                            "scriptActions": [
                            ]
                        }
                    ]
                },
                "networkProperties": {
                    "resourceProviderConnection": "Outbound",
                    "privateLink": "Disabled"
                },
                "minSupportedTlsVersion": "1.2"
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('storageIdentityName'))]":{}
                }
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', parameters('clusterName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.HDInsight/clusters', parameters('clusterName'))]"
                    ],
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                        "name": "[parameters('clusterName')]",
                        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceID')]",
                        "metrics": [
                            {
                                "category": "Availability",
                                "enabled": true,
                                "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZonesName')]",
            "location": "global",
            "tags": {},
            "properties": {},
            "dependsOn": [
                "[variables('storageRoleAssignmentId')]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(variables('privateDnsZonesName'), '/', uniqueString(parameters('vnetId')))]",
            "location": "global",
            "properties": {
                "virtualNetwork": {
                    "id": "[parameters('vnetId')]"
                },
                "registrationEnabled": false
            },
            "dependsOn": [
                "[variables('privateDnsZonesName')]"
            ]
        },

        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "hdInsightRecords",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesName'))]",
                "[resourceId('Microsoft.HDInsight/clusters', parameters('clusterName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "connectivityEndpoints": {
                        "value": "[reference(resourceId('Microsoft.HDInsight/clusters', parameters('clusterName'))).connectivityEndpoints]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "connectivityEndpoints": {
                            "type": "array"
                        }
                    },
                    "variables": {
                        "privateDnsZonesName": "azurehdinsight.net"
                    },
                    "resources": [
                        {
                            "copy": {
                                "name": "hdi-record",
                                "count": "[length(parameters('connectivityEndpoints'))]"
                            },
                            "type": "Microsoft.Network/privateDnsZones/A",
                            "apiVersion": "2018-09-01",
                            "name": "[concat(variables('privateDnsZonesName'),'/',replace(parameters('connectivityEndpoints')[copyIndex()].location,concat('.' , variables('privateDnsZonesName')),''))]",
                            "properties": {
                                "ttl": 3600,
                                "aRecords": [
                                    {
                                        "ipv4Address": "[parameters('connectivityEndpoints')[copyIndex()].privateIPAddress]"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "ref": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.HDInsight/clusters', parameters('clusterName')))]"
        },
        "clusterSshDNSName": {
            "type": "string",
            "value": "[concat(parameters('clusterName'),'-ssh.azurehdinsight.net')]"
        },
        "clusterSshUsername": {
            "type": "string",
            "value": "[concat(parameters('sshUserName'))]"
        },
        "clusterSshPassword": {
            "type": "string",
            "value": "[concat(parameters('sshPassword'))]"
        },
        "enableMonitor": {
            "type": "string",
            "value": "[concat('az hdinsight monitor enable --name ', parameters('clusterName'), ' --resource-group ',resourceGroup().name ,' --workspace ',parameters('LogAnalyticsWorkspaceID') ,' --primary-key ',parameters('LogAnalyticsWorkspaceKey'))]"
        }
    }
}